#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MRB.LanguageLearning.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LanguageLearning")]
	public partial class LanguageLearningDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertConjugation(Conjugation instance);
    partial void UpdateConjugation(Conjugation instance);
    partial void DeleteConjugation(Conjugation instance);
    partial void InsertVerb_Regular(Verb_Regular instance);
    partial void UpdateVerb_Regular(Verb_Regular instance);
    partial void DeleteVerb_Regular(Verb_Regular instance);
    partial void InsertDeclension(Declension instance);
    partial void UpdateDeclension(Declension instance);
    partial void DeleteDeclension(Declension instance);
    partial void InsertNoun_Regular(Noun_Regular instance);
    partial void UpdateNoun_Regular(Noun_Regular instance);
    partial void DeleteNoun_Regular(Noun_Regular instance);
    #endregion
		
		public LanguageLearningDataContext() : 
				base(global::MRB.LanguageLearning.Data.Properties.Settings.Default.LanguageLearningConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LanguageLearningDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanguageLearningDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanguageLearningDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LanguageLearningDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Conjugation> Conjugations
		{
			get
			{
				return this.GetTable<Conjugation>();
			}
		}
		
		public System.Data.Linq.Table<Verb_Regular> Verb_Regulars
		{
			get
			{
				return this.GetTable<Verb_Regular>();
			}
		}
		
		public System.Data.Linq.Table<Declension> Declensions
		{
			get
			{
				return this.GetTable<Declension>();
			}
		}
		
		public System.Data.Linq.Table<Noun_Regular> Noun_Regulars
		{
			get
			{
				return this.GetTable<Noun_Regular>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conjugation")]
	public partial class Conjugation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Present_1stPerson_Singular_Active_Ending;
		
		private string _Present_1stPerson_Plural_Active_Ending;
		
		private string _Present_2ndPerson_Singular_Active_Ending;
		
		private string _Present_2ndPerson_Plural_Active_Ending;
		
		private string _Present_3rdPerson_Singular_Active_Ending;
		
		private string _Present_3rdPerson_Plural_Active_Ending;
		
		private EntitySet<Verb_Regular> _Verb_Regulars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPresent_1stPerson_Singular_Active_EndingChanging(string value);
    partial void OnPresent_1stPerson_Singular_Active_EndingChanged();
    partial void OnPresent_1stPerson_Plural_Active_EndingChanging(string value);
    partial void OnPresent_1stPerson_Plural_Active_EndingChanged();
    partial void OnPresent_2ndPerson_Singular_Active_EndingChanging(string value);
    partial void OnPresent_2ndPerson_Singular_Active_EndingChanged();
    partial void OnPresent_2ndPerson_Plural_Active_EndingChanging(string value);
    partial void OnPresent_2ndPerson_Plural_Active_EndingChanged();
    partial void OnPresent_3rdPerson_Singular_Active_EndingChanging(string value);
    partial void OnPresent_3rdPerson_Singular_Active_EndingChanged();
    partial void OnPresent_3rdPerson_Plural_Active_EndingChanging(string value);
    partial void OnPresent_3rdPerson_Plural_Active_EndingChanged();
    #endregion
		
		public Conjugation()
		{
			this._Verb_Regulars = new EntitySet<Verb_Regular>(new Action<Verb_Regular>(this.attach_Verb_Regulars), new Action<Verb_Regular>(this.detach_Verb_Regulars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_1stPerson_Singular_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_1stPerson_Singular_Active_Ending
		{
			get
			{
				return this._Present_1stPerson_Singular_Active_Ending;
			}
			set
			{
				if ((this._Present_1stPerson_Singular_Active_Ending != value))
				{
					this.OnPresent_1stPerson_Singular_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_1stPerson_Singular_Active_Ending = value;
					this.SendPropertyChanged("Present_1stPerson_Singular_Active_Ending");
					this.OnPresent_1stPerson_Singular_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_1stPerson_Plural_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_1stPerson_Plural_Active_Ending
		{
			get
			{
				return this._Present_1stPerson_Plural_Active_Ending;
			}
			set
			{
				if ((this._Present_1stPerson_Plural_Active_Ending != value))
				{
					this.OnPresent_1stPerson_Plural_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_1stPerson_Plural_Active_Ending = value;
					this.SendPropertyChanged("Present_1stPerson_Plural_Active_Ending");
					this.OnPresent_1stPerson_Plural_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_2ndPerson_Singular_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_2ndPerson_Singular_Active_Ending
		{
			get
			{
				return this._Present_2ndPerson_Singular_Active_Ending;
			}
			set
			{
				if ((this._Present_2ndPerson_Singular_Active_Ending != value))
				{
					this.OnPresent_2ndPerson_Singular_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_2ndPerson_Singular_Active_Ending = value;
					this.SendPropertyChanged("Present_2ndPerson_Singular_Active_Ending");
					this.OnPresent_2ndPerson_Singular_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_2ndPerson_Plural_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_2ndPerson_Plural_Active_Ending
		{
			get
			{
				return this._Present_2ndPerson_Plural_Active_Ending;
			}
			set
			{
				if ((this._Present_2ndPerson_Plural_Active_Ending != value))
				{
					this.OnPresent_2ndPerson_Plural_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_2ndPerson_Plural_Active_Ending = value;
					this.SendPropertyChanged("Present_2ndPerson_Plural_Active_Ending");
					this.OnPresent_2ndPerson_Plural_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_3rdPerson_Singular_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_3rdPerson_Singular_Active_Ending
		{
			get
			{
				return this._Present_3rdPerson_Singular_Active_Ending;
			}
			set
			{
				if ((this._Present_3rdPerson_Singular_Active_Ending != value))
				{
					this.OnPresent_3rdPerson_Singular_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_3rdPerson_Singular_Active_Ending = value;
					this.SendPropertyChanged("Present_3rdPerson_Singular_Active_Ending");
					this.OnPresent_3rdPerson_Singular_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Present_3rdPerson_Plural_Active_Ending", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Present_3rdPerson_Plural_Active_Ending
		{
			get
			{
				return this._Present_3rdPerson_Plural_Active_Ending;
			}
			set
			{
				if ((this._Present_3rdPerson_Plural_Active_Ending != value))
				{
					this.OnPresent_3rdPerson_Plural_Active_EndingChanging(value);
					this.SendPropertyChanging();
					this._Present_3rdPerson_Plural_Active_Ending = value;
					this.SendPropertyChanged("Present_3rdPerson_Plural_Active_Ending");
					this.OnPresent_3rdPerson_Plural_Active_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conjugation_Verb_Regular", Storage="_Verb_Regulars", ThisKey="Id", OtherKey="ConjugationFK")]
		public EntitySet<Verb_Regular> Verb_Regulars
		{
			get
			{
				return this._Verb_Regulars;
			}
			set
			{
				this._Verb_Regulars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Verb_Regulars(Verb_Regular entity)
		{
			this.SendPropertyChanging();
			entity.Conjugation = this;
		}
		
		private void detach_Verb_Regulars(Verb_Regular entity)
		{
			this.SendPropertyChanging();
			entity.Conjugation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Verb_Regular")]
	public partial class Verb_Regular : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Infinitive;
		
		private string _EnglishDefinition;
		
		private string _Root;
		
		private int _ConjugationFK;
		
		private EntityRef<Conjugation> _Conjugation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnInfinitiveChanging(string value);
    partial void OnInfinitiveChanged();
    partial void OnEnglishDefinitionChanging(string value);
    partial void OnEnglishDefinitionChanged();
    partial void OnRootChanging(string value);
    partial void OnRootChanged();
    partial void OnConjugationFKChanging(int value);
    partial void OnConjugationFKChanged();
    #endregion
		
		public Verb_Regular()
		{
			this._Conjugation = default(EntityRef<Conjugation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Infinitive", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Infinitive
		{
			get
			{
				return this._Infinitive;
			}
			set
			{
				if ((this._Infinitive != value))
				{
					this.OnInfinitiveChanging(value);
					this.SendPropertyChanging();
					this._Infinitive = value;
					this.SendPropertyChanged("Infinitive");
					this.OnInfinitiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishDefinition", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnglishDefinition
		{
			get
			{
				return this._EnglishDefinition;
			}
			set
			{
				if ((this._EnglishDefinition != value))
				{
					this.OnEnglishDefinitionChanging(value);
					this.SendPropertyChanging();
					this._EnglishDefinition = value;
					this.SendPropertyChanged("EnglishDefinition");
					this.OnEnglishDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Root
		{
			get
			{
				return this._Root;
			}
			set
			{
				if ((this._Root != value))
				{
					this.OnRootChanging(value);
					this.SendPropertyChanging();
					this._Root = value;
					this.SendPropertyChanged("Root");
					this.OnRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConjugationFK", DbType="Int NOT NULL")]
		public int ConjugationFK
		{
			get
			{
				return this._ConjugationFK;
			}
			set
			{
				if ((this._ConjugationFK != value))
				{
					if (this._Conjugation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConjugationFKChanging(value);
					this.SendPropertyChanging();
					this._ConjugationFK = value;
					this.SendPropertyChanged("ConjugationFK");
					this.OnConjugationFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conjugation_Verb_Regular", Storage="_Conjugation", ThisKey="ConjugationFK", OtherKey="Id", IsForeignKey=true)]
		public Conjugation Conjugation
		{
			get
			{
				return this._Conjugation.Entity;
			}
			set
			{
				Conjugation previousValue = this._Conjugation.Entity;
				if (((previousValue != value) 
							|| (this._Conjugation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conjugation.Entity = null;
						previousValue.Verb_Regulars.Remove(this);
					}
					this._Conjugation.Entity = value;
					if ((value != null))
					{
						value.Verb_Regulars.Add(this);
						this._ConjugationFK = value.Id;
					}
					else
					{
						this._ConjugationFK = default(int);
					}
					this.SendPropertyChanged("Conjugation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Declension")]
	public partial class Declension : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Singular_Nominative_Ending;
		
		private string _Singular_Genitive_Ending;
		
		private string _Singular_Dative_Ending;
		
		private string _Singular_Accusative_Ending;
		
		private string _Singular_Ablative_Ending;
		
		private string _Singular_Vocative_Ending;
		
		private string _Plural_Nominative_Ending;
		
		private string _Plural_Genitive_Ending;
		
		private string _Plural_Dative_Ending;
		
		private string _Plural_Accusative_Ending;
		
		private string _Plural_Ablative_Ending;
		
		private string _Plural_Vocative_Ending;
		
		private EntitySet<Noun_Regular> _Noun_Regulars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSingular_Nominative_EndingChanging(string value);
    partial void OnSingular_Nominative_EndingChanged();
    partial void OnSingular_Genitive_EndingChanging(string value);
    partial void OnSingular_Genitive_EndingChanged();
    partial void OnSingular_Dative_EndingChanging(string value);
    partial void OnSingular_Dative_EndingChanged();
    partial void OnSingular_Accusative_EndingChanging(string value);
    partial void OnSingular_Accusative_EndingChanged();
    partial void OnSingular_Ablative_EndingChanging(string value);
    partial void OnSingular_Ablative_EndingChanged();
    partial void OnSingular_Vocative_EndingChanging(string value);
    partial void OnSingular_Vocative_EndingChanged();
    partial void OnPlural_Nominative_EndingChanging(string value);
    partial void OnPlural_Nominative_EndingChanged();
    partial void OnPlural_Genitive_EndingChanging(string value);
    partial void OnPlural_Genitive_EndingChanged();
    partial void OnPlural_Dative_EndingChanging(string value);
    partial void OnPlural_Dative_EndingChanged();
    partial void OnPlural_Accusative_EndingChanging(string value);
    partial void OnPlural_Accusative_EndingChanged();
    partial void OnPlural_Ablative_EndingChanging(string value);
    partial void OnPlural_Ablative_EndingChanged();
    partial void OnPlural_Vocative_EndingChanging(string value);
    partial void OnPlural_Vocative_EndingChanged();
    #endregion
		
		public Declension()
		{
			this._Noun_Regulars = new EntitySet<Noun_Regular>(new Action<Noun_Regular>(this.attach_Noun_Regulars), new Action<Noun_Regular>(this.detach_Noun_Regulars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Nominative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Nominative_Ending
		{
			get
			{
				return this._Singular_Nominative_Ending;
			}
			set
			{
				if ((this._Singular_Nominative_Ending != value))
				{
					this.OnSingular_Nominative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Nominative_Ending = value;
					this.SendPropertyChanged("Singular_Nominative_Ending");
					this.OnSingular_Nominative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Genitive_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Genitive_Ending
		{
			get
			{
				return this._Singular_Genitive_Ending;
			}
			set
			{
				if ((this._Singular_Genitive_Ending != value))
				{
					this.OnSingular_Genitive_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Genitive_Ending = value;
					this.SendPropertyChanged("Singular_Genitive_Ending");
					this.OnSingular_Genitive_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Dative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Dative_Ending
		{
			get
			{
				return this._Singular_Dative_Ending;
			}
			set
			{
				if ((this._Singular_Dative_Ending != value))
				{
					this.OnSingular_Dative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Dative_Ending = value;
					this.SendPropertyChanged("Singular_Dative_Ending");
					this.OnSingular_Dative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Accusative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Accusative_Ending
		{
			get
			{
				return this._Singular_Accusative_Ending;
			}
			set
			{
				if ((this._Singular_Accusative_Ending != value))
				{
					this.OnSingular_Accusative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Accusative_Ending = value;
					this.SendPropertyChanged("Singular_Accusative_Ending");
					this.OnSingular_Accusative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Ablative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Ablative_Ending
		{
			get
			{
				return this._Singular_Ablative_Ending;
			}
			set
			{
				if ((this._Singular_Ablative_Ending != value))
				{
					this.OnSingular_Ablative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Ablative_Ending = value;
					this.SendPropertyChanged("Singular_Ablative_Ending");
					this.OnSingular_Ablative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Singular_Vocative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Singular_Vocative_Ending
		{
			get
			{
				return this._Singular_Vocative_Ending;
			}
			set
			{
				if ((this._Singular_Vocative_Ending != value))
				{
					this.OnSingular_Vocative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Singular_Vocative_Ending = value;
					this.SendPropertyChanged("Singular_Vocative_Ending");
					this.OnSingular_Vocative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Nominative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Nominative_Ending
		{
			get
			{
				return this._Plural_Nominative_Ending;
			}
			set
			{
				if ((this._Plural_Nominative_Ending != value))
				{
					this.OnPlural_Nominative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Nominative_Ending = value;
					this.SendPropertyChanged("Plural_Nominative_Ending");
					this.OnPlural_Nominative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Genitive_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Genitive_Ending
		{
			get
			{
				return this._Plural_Genitive_Ending;
			}
			set
			{
				if ((this._Plural_Genitive_Ending != value))
				{
					this.OnPlural_Genitive_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Genitive_Ending = value;
					this.SendPropertyChanged("Plural_Genitive_Ending");
					this.OnPlural_Genitive_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Dative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Dative_Ending
		{
			get
			{
				return this._Plural_Dative_Ending;
			}
			set
			{
				if ((this._Plural_Dative_Ending != value))
				{
					this.OnPlural_Dative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Dative_Ending = value;
					this.SendPropertyChanged("Plural_Dative_Ending");
					this.OnPlural_Dative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Accusative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Accusative_Ending
		{
			get
			{
				return this._Plural_Accusative_Ending;
			}
			set
			{
				if ((this._Plural_Accusative_Ending != value))
				{
					this.OnPlural_Accusative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Accusative_Ending = value;
					this.SendPropertyChanged("Plural_Accusative_Ending");
					this.OnPlural_Accusative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Ablative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Ablative_Ending
		{
			get
			{
				return this._Plural_Ablative_Ending;
			}
			set
			{
				if ((this._Plural_Ablative_Ending != value))
				{
					this.OnPlural_Ablative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Ablative_Ending = value;
					this.SendPropertyChanged("Plural_Ablative_Ending");
					this.OnPlural_Ablative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Plural_Vocative_Ending", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Plural_Vocative_Ending
		{
			get
			{
				return this._Plural_Vocative_Ending;
			}
			set
			{
				if ((this._Plural_Vocative_Ending != value))
				{
					this.OnPlural_Vocative_EndingChanging(value);
					this.SendPropertyChanging();
					this._Plural_Vocative_Ending = value;
					this.SendPropertyChanged("Plural_Vocative_Ending");
					this.OnPlural_Vocative_EndingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Declension_Noun_Regular", Storage="_Noun_Regulars", ThisKey="Id", OtherKey="DeclensionFK")]
		public EntitySet<Noun_Regular> Noun_Regulars
		{
			get
			{
				return this._Noun_Regulars;
			}
			set
			{
				this._Noun_Regulars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noun_Regulars(Noun_Regular entity)
		{
			this.SendPropertyChanging();
			entity.Declension = this;
		}
		
		private void detach_Noun_Regulars(Noun_Regular entity)
		{
			this.SendPropertyChanging();
			entity.Declension = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Noun_Regular")]
	public partial class Noun_Regular : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Root;
		
		private int _DeclensionFK;
		
		private string _EnglishDefinition;
		
		private EntityRef<Declension> _Declension;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRootChanging(string value);
    partial void OnRootChanged();
    partial void OnDeclensionFKChanging(int value);
    partial void OnDeclensionFKChanged();
    partial void OnEnglishDefinitionChanging(string value);
    partial void OnEnglishDefinitionChanged();
    #endregion
		
		public Noun_Regular()
		{
			this._Declension = default(EntityRef<Declension>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Root", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Root
		{
			get
			{
				return this._Root;
			}
			set
			{
				if ((this._Root != value))
				{
					this.OnRootChanging(value);
					this.SendPropertyChanging();
					this._Root = value;
					this.SendPropertyChanged("Root");
					this.OnRootChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeclensionFK", DbType="Int NOT NULL")]
		public int DeclensionFK
		{
			get
			{
				return this._DeclensionFK;
			}
			set
			{
				if ((this._DeclensionFK != value))
				{
					if (this._Declension.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeclensionFKChanging(value);
					this.SendPropertyChanging();
					this._DeclensionFK = value;
					this.SendPropertyChanged("DeclensionFK");
					this.OnDeclensionFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishDefinition", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EnglishDefinition
		{
			get
			{
				return this._EnglishDefinition;
			}
			set
			{
				if ((this._EnglishDefinition != value))
				{
					this.OnEnglishDefinitionChanging(value);
					this.SendPropertyChanging();
					this._EnglishDefinition = value;
					this.SendPropertyChanged("EnglishDefinition");
					this.OnEnglishDefinitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Declension_Noun_Regular", Storage="_Declension", ThisKey="DeclensionFK", OtherKey="Id", IsForeignKey=true)]
		public Declension Declension
		{
			get
			{
				return this._Declension.Entity;
			}
			set
			{
				Declension previousValue = this._Declension.Entity;
				if (((previousValue != value) 
							|| (this._Declension.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Declension.Entity = null;
						previousValue.Noun_Regulars.Remove(this);
					}
					this._Declension.Entity = value;
					if ((value != null))
					{
						value.Noun_Regulars.Add(this);
						this._DeclensionFK = value.Id;
					}
					else
					{
						this._DeclensionFK = default(int);
					}
					this.SendPropertyChanged("Declension");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
